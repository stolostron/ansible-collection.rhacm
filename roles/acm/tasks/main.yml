---
- name: Generate cluster token to authentication
  ansible.builtin.include_role:
    name: cluster_login

- name: Set initial state of MultiClusterHub
  ansible.builtin.set_fact:
    deploy_mch: true

- name: Check for installed MultiClusterHub
  kubernetes.core.k8s_info:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: no
    api_version: operator.open-cluster-management.io/v1
    kind: MultiClusterHub
  register: mch_state

- name: Set updated state of MultiClusterHub
  ansible.builtin.set_fact:
    deploy_mch: false
  when: mch_state.resources != []

- name: Print when MCH already installed
  ansible.builtin.debug:
    msg: "MultiClusterHub already installed. Skipping the deployment."
  when:
    - state == "present"
    - not deploy_mch | bool

- name: Deploy ACM
  ansible.builtin.include_tasks:
    file: deploy.yml
  when:
    - state == "present"
    - deploy_mch | bool

- name: Destroy ACM
  ansible.builtin.include_tasks:
    file: destroy.yml
  when: state == "absent"

- block:
    - name: Fetch MultiClusterHub console url
      kubernetes.core.k8s_info:
        host: "{{ cluster_api }}"
        api_key: "{{ cluster_api_token }}"
        validate_certs: no
        api_version: route.openshift.io/v1
        kind: Route
        name: console
        namespace: openshift-console
      register: acm_route

    - name: Define cluster console url
      ansible.builtin.set_fact:
        cluster_console: "{{ acm_route.resources[0].status.ingress[0].host }}"
  when:
    - state == "present"
    - cluster_console is not defined

- name: Print final state message
  vars:
    msg: |
      {%- if state == "present" -%}
      Deployment of MultiClusterHub succeeded.

      Cluster details:
      Cluster console: {{ cluster_console }}
      Cluster api: {{ cluster_api }}
      {%- elif state == "absent" -%}
      The MultiClusterHub uninstall has been finished
      {%- endif -%}
  ansible.builtin.debug:
    msg: "{{ msg.split('\n') }}"

---
# The following two tasks represent the following bash command:
# curl -s -X GET https://quay.io/api/v1/repository/acm-d/acm-custom-registry/tag/ \
# | jq -S '.tags[] | {name: .name} | select(.name | startswith("2.8"))' | jq -r '.name' | head -1
- name: Fetch testing snapshots if snapshot not provided manually
  ansible.builtin.uri:
    url: "{{ registry_query_url }}/?filter_tag_name=like:{{ acm_version }}"
    method: "GET"
    status_code: 200
  register: snap
  when: snapshot is none

- name: Select latest testing snapshot according to provided version
  ansible.builtin.set_fact:
    snapshot: "{{ snap.json.tags
      | selectattr('name', 'match', acm_version)
      | map(attribute='name') | first }}"
  when: snapshot is none

- name: Print selected snapshot for ACM deployment
  ansible.builtin.debug:
    msg: "ACM version '{{ acm_version }}' with '{{ snapshot }}' snapshot will be deployed"

- name: Update cluster pull-secret secret
  ansible.builtin.include_tasks:
    file: update_pull_secret.yml

- name: Create ImageContentSourcePolicy
  community.okd.k8s:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    definition: "{{ lookup('template', 'image-content-source-policy.yaml.j2') | from_yaml }}"
    state: present

- name: Create ACM CatalogSource
  community.okd.k8s:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    definition: "{{ lookup('template', 'catalog-source.yaml.j2') | from_yaml }}"
    state: present
  loop: "{{ catalog_sources }}"

- name: Wait for ACM CatalogSource to get READY state
  kubernetes.core.k8s_info:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    api_version: operators.coreos.com/v1alpha1
    kind: CatalogSource
    name: "{{ item.catalog_name }}"
    namespace: "{{ item.catalog_ns }}"
  loop: "{{ catalog_sources }}"
  register: acm_catalog
  until:
    - "'status' in acm_catalog.resources[0]"
    - "'connectionState' in acm_catalog.resources[0].status"
    - "'lastObservedState' in acm_catalog.resources[0].status.connectionState"
    - acm_catalog.resources[0].status.connectionState.lastObservedState == "READY"
  retries: 30
  delay: 20

- name: Define ACM deployment type
  vars:
    msg: |
      {%- if not deploy_test_env | bool -%}
      Deploying ACM {{ acm_version }} from official Red Hat registry
      {%- elif deploy_test_env | bool -%}
      Deploying ACM {{ acm_version }} from downstream testing registries
      {%- endif -%}
  ansible.builtin.debug:
    msg: "{{ msg.split('\n') }}"

- name: Create namespace "{{ acm_namespace }}"
  community.okd.k8s:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    api_version: v1
    kind: Namespace
    name: "{{ acm_namespace }}"
    state: present

- name: Create OperatorGroup
  community.okd.k8s:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    definition: "{{ lookup('template', 'operator-group.yaml.j2') | from_yaml }}"
    state: present

- name: Apply testing environment configuration
  ansible.builtin.include_tasks:
    file: test_env_config.yml
  when: deploy_test_env | bool

- name: Create ACM Subscription
  community.okd.k8s:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    definition: "{{ lookup('template', 'subscription.yaml.j2') | from_yaml }}"
    state: present

- name: Fetch the name of installed ClusterServiceVersion
  kubernetes.core.k8s_info:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    name: acm-operator-subscription
    namespace: "{{ acm_namespace }}"
  register: acm_subscription
  until:
    - acm_subscription.resources | length > 0
    - "'status' in acm_subscription.resources[0]"
    - "'currentCSV' in acm_subscription.resources[0].status"
  retries: 15
  delay: 10

- name: Wait for the ClusterServiceVersion to succeeded install
  kubernetes.core.k8s_info:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    name: "{{ acm_subscription.resources[0].status.currentCSV }}"
    namespace: "{{ acm_namespace }}"
  register: acm_csv
  until:
    - acm_csv.resources | length > 0
    - "'status' in acm_csv.resources[0]"
    - "'phase' in acm_csv.resources[0].status"
    - acm_csv.resources[0].status.phase == "Succeeded"
  retries: 15
  delay: 10

- name: Deploy MultiClusterHub
  community.okd.k8s:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: false
    definition: "{{ lookup('template', 'multiclusterhub.yaml.j2') | from_yaml }}"
    state: present
    wait: true
    wait_timeout: 1200
    wait_condition:
      type: Complete
      status: true

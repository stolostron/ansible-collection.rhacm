---
- name: ROSA - Fetch cluster api and console urls
  ansible.builtin.command:
    cmd: |
      {{ rosa }} --profile rhacm-automation
      describe cluster
      --cluster {{ item.name }}
      --region {{ item.region }}
      -o json
  register: rosa_cluster_url
  changed_when: false

# Admin user for ROSA cluster created once and in order to fetch its password again
# the user should be re-created.
- name: Handle ROSA user creation
  block:
    - name: ROSA - Create admin user
      ansible.builtin.command:
        cmd: |
          {{ rosa }} --profile rhacm-automation
          create admin
          --cluster {{ item.name }}
          --region {{ item.region }}
          -o json
      register: rosa_admin
      no_log: true
      changed_when: true
  rescue:
    - name: ROSA - Delete existing admin user
      ansible.builtin.command:
        cmd: |
          {{ rosa }} --profile rhacm-automation
          delete admin
          --cluster {{ item.name }}
          --region {{ item.region }}
          --yes
      changed_when: true

    - name: ROSA - Create admin user
      ansible.builtin.command:
        cmd: |
          {{ rosa }} --profile rhacm-automation
          create admin
          --cluster {{ item.name }}
          --region {{ item.region }}
          -o json
      register: rosa_admin
      no_log: true
      changed_when: true

- name: ROSA - Create cluster credentials file
  ansible.builtin.copy:
    content: |
      console: {{ (rosa_cluster_url.stdout | from_json)['console']['url'] }}
      api: {{ (rosa_cluster_url.stdout | from_json)['api']['url'] }}
      username: {{ (rosa_admin.stdout | from_json)['username'] }}
      password: {{ (rosa_admin.stdout | from_json)['password'] }}
    dest: "{{ working_path }}/{{ item.name }}/cluster-credentials"
    mode: '0644'

- name: ROSA - Write cluster details into state file
  ansible.builtin.blockinfile:
    path: "{{ cl_details_file_path }}"
    block: |
      {{ item.name }}:
        console: {{ (rosa_cluster_url.stdout | from_json)['console']['url'] }}
        api: {{ (rosa_cluster_url.stdout | from_json)['api']['url'] }}
        user: {{ (rosa_admin.stdout | from_json)['username'] }}
        pass: {{ (rosa_admin.stdout | from_json)['password'] }}
    marker: "#{mark} {{ item.name }} details"
    mode: '0644'
    create: true
    state: present

- name: ROSA - Observe a token from cluster "{{ item.name }}"
  community.okd.openshift_auth:
    host: "{{ (rosa_cluster_url.stdout | from_json)['api']['url'] }}"
    username: "{{ (rosa_admin.stdout | from_json)['username'] }}"
    password: "{{ (rosa_admin.stdout | from_json)['password'] }}"
    validate_certs: false
    state: present
  register: ocp_auth
  until:
    - "'openshift_auth' in ocp_auth"
    - ocp_auth.openshift_auth.api_key
  retries: 30
  delay: 25
  no_log: true

- name: ROSA - Generate kubeconfig file for cluster
  ansible.builtin.template:
    src: token-kubeconfig.j2
    dest: "{{ working_path }}/{{ item.name }}/kubeconfig"
    mode: '0644'

- name: ROSA - Add cluster details to the state message
  vars:
    msg: |
      Deployment of {{ item.name }} cluster succeeded.

      Cluster connection details could be found here: {{ cl_details_file_path }}
      Cluster manifests files could be found here: {{ working_path }}/{{ item.name }}/
  ansible.builtin.set_fact:
    cl_state: "{{ cl_state | default([]) + msg.split('\n') }}"

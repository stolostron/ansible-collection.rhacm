---
- name: ROKS - Fetch cluster kubeconfig file
  ansible.builtin.command:
    cmd: |
      {{ ibmcloud }} ks cluster config
      --cluster {{ item.name }} --admin --output yaml
  register: roks_kubeconf
  changed_when: false

- name: ROKS - Save the kubeconfig file in the cluster directory
  ansible.builtin.copy:
    content: "{{ roks_kubeconf.stdout }}"
    dest: "{{ working_path }}/{{ item.name }}/kubeconfig"
    mode: '0644'

- name: ROKS - Fetch cluster API url
  ansible.builtin.command:
    cmd: |
      {{ ibmcloud }} ks cluster get
      --cluster {{ item.name }} --output json
  register: roks_cluster_info
  changed_when: false

- name: ROKS - Create cluster credentials file
  ansible.builtin.copy:
    content: |
      api: {{ (roks_cluster_info.stdout | from_json)['masterURL'] }}
      username: apikey
      password: {{ roks_creds.roks_token }}
    dest: "{{ working_path }}/{{ item.name }}/cluster-credentials"
    mode: '0644'

- name: ROKS - Write cluster details into state file
  ansible.builtin.blockinfile:
    path: "{{ cl_details_file_path }}"
    block: |
      {{ item.name }}:
        api: {{ (roks_cluster_info.stdout | from_json)['masterURL'] }}
        user: apikey
        pass: {{ roks_creds.roks_token }}
    marker: "#{mark} {{ item.name }} details"
    mode: '0644'
    create: true
    state: present

- name: ROKS - Add cluster details to the state message
  vars:
    msg: |
      Deployment of {{ item.name }} cluster succeeded.

      Cluster connection details could be found here: {{ cl_details_file_path }}
      Cluster manifests files could be found here: {{ working_path }}/{{ item.name }}/
  ansible.builtin.set_fact:
    cl_state: "{{ cl_state | default([]) + msg.split('\n') }}"
